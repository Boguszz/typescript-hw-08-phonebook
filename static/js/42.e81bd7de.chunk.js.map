{"version":3,"file":"static/js/42.e81bd7de.chunk.js","mappings":"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","sources":["components/GoBack/GoBack.styled.ts","components/GoBack/GoBack.tsx","components/ContactForm/ContactForm.styled.ts","components/ContactForm/ContactForm.tsx","hooks/useCreateNewContact.ts","pages/AddContactPage.tsx","utilities/validationSchema.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 30px;\n  padding: 10px 25px 10px 25px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Button, Label } from './GoBack.styled';\nimport { useNavigate } from 'react-router-dom';\nimport IGoBack from 'types/IGoBack';\n\nconst GoBack = ({ text, path }: IGoBack) => {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n};\n\nexport default GoBack;\n","import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const TitlePage = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  font-weight: 900;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 8px;\n  color: red;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 40px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport GoBack from 'components/GoBack';\n\nimport IContactForm from 'types/IContactForm';\n\nimport {\n  TitlePage,\n  Label,\n  Error,\n  Title,\n  StyledField,\n  Button,\n} from './ContactForm.styled';\n\nconst ContactForm = ({\n  title,\n  initialValues,\n  onSubmitForm,\n  validationSchema,\n  buttonLabel,\n}: IContactForm) => {\n  return (\n    <>\n      <TitlePage>{title}</TitlePage>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Title>Name</Title>\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <Error name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Phone</Title>\n              <StyledField\n                type=\"tel\"\n                name=\"phone\"\n                onChange={handleChange}\n                value={values.phone}\n              />\n              <Error name=\"phone\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Email</Title>\n              <StyledField\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                value={values.email}\n              />\n              <Error name=\"email\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\">{isSubmitting ? '...' : buttonLabel}</Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useNavigate } from 'react-router-dom';\nimport { useCreateContactMutation } from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { IContactToServer } from 'types/IContact';\n\nconst useCreateNewContact = () => {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n\n  const onSubmitForm = (data: IContactToServer) => {\n    createContact(data);\n    navigate('/contacts');\n\n    Notify.success(`The ${data.name} has been added to your contact list.`);\n    return;\n  };\n\n  return { onSubmitForm };\n};\n\nexport default useCreateNewContact;\n","import Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\n\nimport useCreateNewContact from 'hooks/useCreateNewContact';\nimport { contactSchema } from 'utilities/validationSchema';\n\ninterface IAddContactInitialValue {\n  name: string;\n  phone: string;\n  email: string;\n}\n\nconst AddContactPage: React.FC = () => {\n  const initialValues: IAddContactInitialValue | null = {\n    name: '',\n    phone: '',\n    email: '',\n  };\n  const { onSubmitForm } = useCreateNewContact();\n\n  return (\n    <Container>\n      <ContactForm\n        title=\"Add new contact\"\n        initialValues={initialValues}\n        onSubmitForm={onSubmitForm}\n        validationSchema={contactSchema}\n        buttonLabel=\"Add contact\"\n      />\n    </Container>\n  );\n};\n\nexport default AddContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  phone: yup.number().required(),\n  email: yup.string().email(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["Button","styled","Label","text","path","navigate","useNavigate","type","onClick","TitlePage","Error","ErrorMessage","Title","StyledField","Field","title","initialValues","onSubmitForm","validationSchema","buttonLabel","onSubmit","values","handleChange","handleSubmit","isSubmitting","name","onChange","value","component","phone","email","useCreateContactMutation","createContact","data","Notify","useCreateNewContact","Container","ContactForm","contactSchema","yup","required","min","max","userLoginSchema","password","userRegisterSchema"],"sourceRoot":""}