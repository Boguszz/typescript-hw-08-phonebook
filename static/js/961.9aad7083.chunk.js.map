{"version":3,"file":"static/js/961.9aad7083.chunk.js","mappings":"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","sources":["hooks/useShowModal.ts","utilities/getFirstLetter.ts","utilities/getRandomHexColor.ts","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","components/DeletingContact/DeletingContact.styled.ts","hooks/useDeletingContact.ts","components/DeletingContact/DeletingContact.tsx","utilities/dateFormatting.ts","components/ContactInformation/ContactInformation.styled.ts","components/ContactInformation/ContactInformation.tsx","components/Contact/Contact.styled.ts","components/Contact/Contact.tsx","components/Message/Message.styled.ts","components/Message/Message.tsx"],"sourcesContent":["import { useState } from 'react';\n\nconst useShowModal = (option: boolean) => {\n  const [showContactInfoModal, setShowContactInfoModal] = useState(option);\n  const [showDeleteContactModal, setShowDeleteContactModal] = useState(option);\n\n  const toggleContactInfoModal = () => setShowContactInfoModal(state => !state);\n  const toggleDeleteContactModal = () =>\n    setShowDeleteContactModal(state => !state);\n\n  return {\n    showContactInfoModal,\n    toggleContactInfoModal,\n    showDeleteContactModal,\n    toggleDeleteContactModal,\n  };\n};\n\nexport default useShowModal;\n","const getFirstLetter = (name: string) => name.slice(0, 1);\n\nexport default getFirstLetter;\n","const getRandomHexColor = () => {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\nexport default getRandomHexColor;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--backdrop-bg-color);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 280px;\n  height: auto;\n  padding: 10px;\n\n  background-color: var(--main-bg-color);\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 50px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid var(--accent-bg-color);\n\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 35px;\n    padding-bottom: 25px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 900;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Backdrop, ModalWrapper, Wrapper, Title, Button } from './Modal.styled';\nimport IModal from 'types/IModal';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nconst Modal = ({ children, onClose, title }: IModal) => {\n  useEffect(() => {\n    const onPessKeyDown = (e: { code: string }) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPessKeyDown);\n\n    return () => window.removeEventListener('keydown', onPessKeyDown);\n  }, [onClose]);\n\n  const onBackdropClick = (e: { target: any; currentTarget: any }) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Button type=\"button\" onClick={onClose}>\n            <AiOutlineClose />\n          </Button>\n        </Wrapper>\n        {children}\n      </ModalWrapper>\n    </Backdrop>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: red;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: red;\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst useDeletingContact = (\n  id?: string,\n  name?: string,\n  toggleModal?: () => void,\n) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    if (id !== undefined && toggleModal !== undefined) {\n      deleteContact(id);\n      navigate('/contacts');\n      toggleModal();\n      Notify.success(`The ${name} has been removed from your contact list.`);\n    }\n  };\n\n  return { isDeleting, deleteSelectedContact };\n};\n\nexport default useDeletingContact;\n","import {\n  Text,\n  Name,\n  List,\n  Item,\n  ButtonCancel,\n  ButtonDelete,\n} from './DeletingContact.styled';\nimport useDeletingContact from 'hooks/useDeletingContact';\nimport IDeletingContact from 'types/IDeletingContact';\n\nconst DeletingContact = ({ id, name, toggleModal }: IDeletingContact) => {\n  const { isDeleting, deleteSelectedContact } = useDeletingContact(\n    id,\n    name,\n    toggleModal,\n  );\n\n  return (\n    <>\n      <Text>\n        Are you sure you want to delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={toggleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonDelete type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? '...' : 'Delete'}\n          </ButtonDelete>\n        </Item>\n      </List>\n    </>\n  );\n};\n\nexport default DeletingContact;\n","const dateFormatting = (date: string) => {\n  if (date) {\n    return date.slice(0, 19).replace('T', ' ');\n  }\n};\n\nexport default dateFormatting;\n","import styled from '@emotion/styled';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { MdEmail } from 'react-icons/md';\nimport { IoIosStar } from 'react-icons/io';\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n`;\n\nexport const StarIcon = styled(IoIosStar)`\n  fill: #e6be0e;\n`;\n\nexport const Body = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Property = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  margin-bottom: 8px;\n`;\n\nexport const Group = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Value = styled.span`\n  color: var(--accent-text-color);\n`;\n\nexport const UseerIcon = styled(FaUserAlt)`\n  margin-right: 10px;\n  color: var(--accent-text-color);\n`;\n\nexport const PhoneIcon = styled(BsFillTelephoneFill)`\n  margin-right: 10px;\n  color: var(--accent-text-color);\n`;\n\nexport const EmailIcon = styled(MdEmail)`\n  margin-right: 10px;\n  color: var(--accent-text-color);\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { useGetContactByIdQuery } from 'redux/contacts/contact-api';\nimport dateFormatting from 'utilities/dateFormatting';\n\nimport Loader from 'components/Loader';\n\nimport {\n  Header,\n  StarIcon,\n  Body,\n  Property,\n  Group,\n  Value,\n  UseerIcon,\n  PhoneIcon,\n  EmailIcon,\n  Footer,\n} from './ContactInformation.styled';\n\nconst ContactInformation: React.FC<{ id: string }> = ({ id }) => {\n  const { data, isFetching } = useGetContactByIdQuery({ contactId: id });\n  const contact = data?.data;\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {contact && (\n        <div>\n          <Header>\n            <p>\n              ID: <span>{contact._id}</span>\n            </p>\n            {contact.favorite && <StarIcon />}\n          </Header>\n\n          <Body>\n            <Property>\n              <Group>\n                <UseerIcon />\n                <p>Name:</p>\n              </Group>\n              <Value>{contact.name}</Value>\n            </Property>\n            <Property>\n              <Group>\n                <PhoneIcon />\n                <p>Phone:</p>\n              </Group>\n              <Value>{contact.phone}</Value>\n            </Property>\n            <Property>\n              <Group>\n                <EmailIcon />\n                <p>Email:</p>\n              </Group>\n              <Value>{contact.email ? contact.email : '---'}</Value>\n            </Property>\n          </Body>\n\n          <Footer>\n            <p>Created: {dateFormatting(contact.createdAt)}</p>\n            <p>Updated: {dateFormatting(contact.updatedAt)}</p>\n          </Footer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactInformation;\n","import styled from '@emotion/styled';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { MdEmail } from 'react-icons/md';\nimport { IoIosStar } from 'react-icons/io';\n\nexport const Wrapper = styled.div`\n  background-color: #fafafa;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Guard = styled.div`\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    width: 100%;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IconUser = styled.p<{ background?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  background-color: ${({ background }) =>\n    background ? background : 'var(--accent-bg-color)'};\n  color: var(--main-bg-color);\n\n  width: 40px;\n  height: 40px;\n  margin-right: 30px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--main-text-color);\n`;\n\nexport const DataWrapper = styled.div`\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    margin-bottom: 0;\n  }\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-right: 50px;\n  }\n`;\n\nexport const NumberIcon = styled(BsFillTelephoneFill)`\n  fill: var(--accent-bg-color);\n  margin-right: 5px;\n`;\n\nexport const Email = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const EmailIcon = styled(MdEmail)`\n  fill: var(--accent-bg-color);\n  margin-right: 5px;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n\n  cursor: pointer;\n  transition: color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n\nexport const StarIcon = styled(IoIosStar)<{ fill?: string }>`\n  fill: ${({ fill }) => (fill ? fill : '')};\n`;\n","import { useNavigate } from 'react-router-dom';\nimport useShowModal from 'hooks/useShowModal';\nimport { useChangeFavoriteMutation } from 'redux/contacts/contact-api';\n\nimport getFirstLetter from 'utilities/getFirstLetter';\nimport getRandomHexColor from 'utilities/getRandomHexColor';\nimport { IContactState } from 'types/IContact';\n\nimport { FaTrash, FaUserEdit } from 'react-icons/fa';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport Modal from 'components/Modal';\nimport DeletingContact from 'components/DeletingContact';\nimport ContactInformation from 'components/ContactInformation';\n\nimport {\n  Wrapper,\n  Guard,\n  NameWrapper,\n  IconUser,\n  Name,\n  DataWrapper,\n  Number,\n  NumberIcon,\n  Email,\n  EmailIcon,\n  ButtonList,\n  ButtonItem,\n  Button,\n  StarIcon,\n} from './Contact.styled';\n\nconst Contact = ({ id, name, phone, email, favorite }: IContactState) => {\n  const {\n    showContactInfoModal,\n    toggleContactInfoModal,\n    showDeleteContactModal,\n    toggleDeleteContactModal,\n  } = useShowModal(false);\n  const navigate = useNavigate();\n  const [changeFavorite] = useChangeFavoriteMutation();\n\n  const toggleFavorite = () => {\n    changeFavorite({ contactId: id, favorite: !favorite });\n\n    !favorite\n      ? Notify.success(`User ${name} been successfully added to favorite list.`)\n      : Notify.success(\n          `User ${name} been successfully deleted from favorite list.`,\n        );\n  };\n\n  return (\n    <>\n      {showDeleteContactModal && (\n        <Modal onClose={toggleDeleteContactModal} title={name}>\n          <DeletingContact\n            id={id}\n            name={name}\n            toggleModal={toggleDeleteContactModal}\n          />\n        </Modal>\n      )}\n\n      {showContactInfoModal && (\n        <Modal onClose={toggleContactInfoModal} title={name}>\n          <ContactInformation id={id} />\n        </Modal>\n      )}\n\n      <Wrapper>\n        <Guard onClick={toggleContactInfoModal}>\n          <NameWrapper>\n            <IconUser background={getRandomHexColor()}>\n              {getFirstLetter(name)}\n            </IconUser>\n            <Name>{name}</Name>\n          </NameWrapper>\n\n          <DataWrapper>\n            <Number>\n              <NumberIcon />\n              {phone}\n            </Number>\n            {email !== '' && (\n              <Email>\n                <EmailIcon />\n                {email}\n              </Email>\n            )}\n          </DataWrapper>\n        </Guard>\n\n        <ButtonList>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleDeleteContactModal}>\n              <FaTrash />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n              <FaUserEdit />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleFavorite}>\n              {favorite ? <StarIcon fill=\"#e6be0e\" /> : <StarIcon />}\n            </Button>\n          </ButtonItem>\n        </ButtonList>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import { Wrapper, Text } from './Message.styled';\n\nconst Message: React.FC<{ message?: string }> = ({ message }) => {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n};\n\nexport default Message;\n"],"names":["option","useState","showContactInfoModal","setShowContactInfoModal","showDeleteContactModal","setShowDeleteContactModal","toggleContactInfoModal","state","toggleDeleteContactModal","name","slice","Math","floor","random","toString","Backdrop","styled","ModalWrapper","Wrapper","Title","Button","modalRoot","document","querySelector","children","onClose","title","useEffect","onPessKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","type","Text","Name","List","Item","ButtonCancel","ButtonDelete","id","toggleModal","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isLoading","deleteSelectedContact","undefined","Notify","useDeletingContact","date","replace","Header","StarIcon","IoIosStar","Body","Property","Group","Value","UseerIcon","FaUserAlt","PhoneIcon","BsFillTelephoneFill","EmailIcon","MdEmail","Footer","useGetContactByIdQuery","contactId","data","isFetching","contact","Loader","_id","favorite","phone","email","dateFormatting","createdAt","updatedAt","Guard","NameWrapper","IconUser","background","DataWrapper","Number","NumberIcon","Email","ButtonList","ButtonItem","fill","useShowModal","useChangeFavoriteMutation","changeFavorite","getRandomHexColor","getFirstLetter","message"],"sourceRoot":""}