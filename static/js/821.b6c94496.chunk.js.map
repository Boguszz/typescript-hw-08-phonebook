{"version":3,"file":"static/js/821.b6c94496.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","components/Contact/Contact.styled.ts","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","hooks/useShowModal.ts","components/DeletingContact/DeletingContact.styled.ts","hooks/useDeletingContact.ts","components/DeletingContact/DeletingContact.tsx","components/Contact/Contact.tsx","components/ContactList/ContactList.styled.ts","hooks/useFiltredContacts.ts","redux/contacts/contact-selectors.ts","components/ContactList/ContactList.tsx","components/Message/Message.styled.ts","components/Message/Message.tsx","components/AddButton/AddButton.styled.ts","components/AddButton/AddButton.tsx","pages/ContactsPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 50px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 95%;\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n","import { Label, Text, Input } from './Filter.styled';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\nimport { useAppDispatch } from 'hooks/useAppDispatch';\nimport React from 'react';\n\nconst Filter: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const changeFieldFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.currentTarget.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" onChange={changeFieldFilter} name=\"filter\" />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nimport { FaUser } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  background-color: #fafafa;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IconUser = styled(FaUser)`\n  background-color: var(--accent-bg-color);\n  color: var(--main-bg-color);\n\n  margin-right: 30px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--main-text-color);\n`;\n\nexport const Number = styled.p`\n  text-align: center;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n\n  cursor: pointer;\n  transition: color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--backdrop-bg-color);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 280px;\n  height: auto;\n  padding: 10px;\n\n  background-color: var(--main-bg-color);\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 50px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid var(--accent-bg-color);\n\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 35px;\n    padding-bottom: 25px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 900;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Backdrop, ModalWrapper, Wrapper, Title, Button } from './Modal.styled';\nimport IModal from 'types/IModal';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nconst Modal = ({ children, onClose, title }: IModal) => {\n  useEffect(() => {\n    const onPessKeyDown = (e: { code: string }) => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPessKeyDown);\n\n    return () => window.removeEventListener('keydown', onPessKeyDown);\n  }, [onClose]);\n\n  const onBackdropClick = (e: { target: any; currentTarget: any }) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Button type=\"button\" onClick={onClose}>\n            <AiOutlineClose />\n          </Button>\n        </Wrapper>\n        {children}\n      </ModalWrapper>\n    </Backdrop>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\n\nconst useShowModal = (option: boolean) => {\n  const [showModal, setShowModal] = useState<boolean>(option);\n  const toggleModal = () => setShowModal(prevState => !prevState);\n\n  return { toggleModal, showModal };\n};\n\nexport default useShowModal;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: red;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: red;\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst useDeletingContact = (\n  id?: string,\n  name?: string,\n  toggleModal?: () => void,\n) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    if (id !== undefined && toggleModal !== undefined) {\n      deleteContact(id);\n      navigate('/contacts');\n      toggleModal();\n      Notify.success(`The ${name} has been removed from your contact list.`);\n    }\n  };\n\n  return { isDeleting, deleteSelectedContact };\n};\n\nexport default useDeletingContact;\n","import {\n  Text,\n  Name,\n  List,\n  Item,\n  ButtonCancel,\n  ButtonDelete,\n} from './DeletingContact.styled';\nimport useDeletingContact from 'hooks/useDeletingContact';\nimport IDeletingContact from 'types/IDeletingContact';\n\nconst DeletingContact = ({ id, name, toggleModal }: IDeletingContact) => {\n  const { isDeleting, deleteSelectedContact } = useDeletingContact(\n    id,\n    name,\n    toggleModal,\n  );\n\n  return (\n    <>\n      <Text>\n        Are you sure you want to delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={toggleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonDelete type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? '...' : 'Delete'}\n          </ButtonDelete>\n        </Item>\n      </List>\n    </>\n  );\n};\n\nexport default DeletingContact;\n","import { FaTrash, FaUserEdit } from 'react-icons/fa';\nimport {\n  Wrapper,\n  NameWrapper,\n  IconUser,\n  Name,\n  Number,\n  ButtonList,\n  ButtonItem,\n  Button,\n} from './Contact.styled';\nimport Modal from 'components/Modal';\nimport useShowModal from 'hooks/useShowModal';\nimport DeletingContact from 'components/DeletingContact';\nimport { useNavigate } from 'react-router-dom';\nimport IContact from 'types/IContact';\n\nconst Contact = ({ id, name, number }: IContact) => {\n  const { showModal, toggleModal } = useShowModal(false);\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal} title={name}>\n          <DeletingContact id={id} name={name} toggleModal={toggleModal} />\n        </Modal>\n      )}\n\n      <Wrapper>\n        <NameWrapper>\n          <IconUser />\n          <Name>{name}</Name>\n        </NameWrapper>\n\n        <Number>{number}</Number>\n\n        <ButtonList>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleModal}>\n              <FaTrash />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n              <FaUserEdit />\n            </Button>\n          </ButtonItem>\n        </ButtonList>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport { getFilter } from 'redux/contacts/contact-selectors';\nimport { useAppSelector } from './useAppSelector';\n\nconst useFiltredContacts = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const filter = useAppSelector(state => getFilter(state));\n\n  const filtredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact?.name?.toLowerCase().includes(normalizedFilter),\n      )\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return { filteredContactList };\n};\n\nexport default useFiltredContacts;\n","import { RootState } from 'redux/store';\n\nexport const getFilter = (state: RootState) => state.contacts.filter;\n","import Contact from 'components/Contact/Contact';\nimport Loader from 'components/Loader';\nimport NotFound from 'components/NotFound';\nimport { List, Item } from './ContactList.styled';\nimport { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport useFiltredContacts from 'hooks/useFiltredContacts';\nimport { useEffect } from 'react';\n\nconst ContactList: React.FC = () => {\n  const { data: contacts, isFetching, error, refetch } = useGetContactsQuery();\n  const { filteredContactList } = useFiltredContacts();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {error && <NotFound data={error} status={error} />}\n      <List>\n        {contacts &&\n          filteredContactList &&\n          filteredContactList.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <Contact id={id} name={name} number={number} />\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import { Wrapper, Text } from './Message.styled';\n\nconst Message: React.FC<{ message?: string }> = ({ message }) => {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 270px;\n  height: 40px;\n  margin-bottom: 50px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n`;\n\nexport const ButtonText = styled.span`\n  margin-right: 10px;\n`;\n","import { Button, ButtonText } from './AddButton.styled';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\nconst AddButton: React.FC<{ text: string }> = ({ text }) => {\n  return (\n    <Button to=\"/contacts/add\">\n      <ButtonText>{text}</ButtonText>\n      <BsFillPersonPlusFill size={20} />\n    </Button>\n  );\n};\n\nexport default AddButton;\n","import Container from 'components/Container';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Message from 'components/Message';\nimport { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport AddButton from 'components/AddButton';\n\nconst ContactsPage: React.FC = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <Container title=\"Contacts\">\n      <AddButton text=\"Add new contact\" />\n      <Filter />\n      {contacts && contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Message message=\"Contact list is empty.\" />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Label","styled","Text","Input","dispatch","useAppDispatch","type","onChange","e","value","currentTarget","changeFilter","name","Wrapper","NameWrapper","IconUser","FaUser","Name","Number","ButtonList","ButtonItem","Button","Backdrop","ModalWrapper","Title","modalRoot","document","querySelector","children","onClose","title","useEffect","onPessKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","target","option","useState","showModal","setShowModal","toggleModal","prevState","List","Item","ButtonCancel","ButtonDelete","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isLoading","deleteSelectedContact","undefined","Notify","useDeletingContact","number","useShowModal","contacts","useGetContactsQuery","data","filter","useAppSelector","state","getFilter","filteredContactList","normalizedFilter","toLowerCase","contact","includes","filtredContacts","isFetching","error","refetch","useFiltredContacts","Loader","NotFound","status","map","message","Link","ButtonText","text","to","size","Container","length"],"sourceRoot":""}