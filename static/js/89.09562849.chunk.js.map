{"version":3,"file":"static/js/89.09562849.chunk.js","mappings":"kPAEA,EAFuB,SAACA,GAAD,OAAkBA,EAAKC,MAAM,EAAG,ICIvD,EAJ0B,WACxB,MAAM,IAAN,OAAWC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,M,iDCC9CC,EAAOC,EAAAA,EAAAA,EAAH,oEAKJC,EAAOD,EAAAA,EAAAA,KAAH,uCAIJE,EAAOF,EAAAA,EAAAA,GAAH,qEAKJG,EAAOH,EAAAA,EAAAA,GAAH,6FAQJI,EAAeJ,EAAAA,EAAAA,OAAH,+ZAsBZK,EAAeL,EAAAA,EAAAA,OAAH,4YCtBzB,EApB2B,SACzBM,EACAb,EACAc,GAEA,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAWA,MAAO,CAAEC,WAXT,KAAwBC,UAWHC,sBATS,gBACjBC,IAAPT,QAAoCS,IAAhBR,IACtBI,EAAcL,GACdE,EAAS,aACTD,IACAS,EAAAA,OAAAA,QAAA,cAAsBvB,EAAtB,kD,SCsBN,EA5BwB,SAAC,GAAiD,IAA/Ca,EAA8C,EAA9CA,GAAIb,EAA0C,EAA1CA,KAAMc,EAAoC,EAApCA,YACnC,EAA8CU,EAC5CX,EACAb,EACAc,GAHMK,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,sBAMpB,OACE,iCACE,UAACf,EAAD,yDAC4C,SAACE,EAAD,UAAOR,IADnD,QAGA,UAACS,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAcc,KAAK,SAASC,QAASZ,EAArC,uBAIF,SAACJ,EAAD,WACE,SAACE,EAAD,CAAca,KAAK,SAASC,QAASL,EAArC,SACGF,EAAa,MAAQ,oBCzBlC,EANuB,SAACQ,GACtB,GAAIA,EACF,OAAOA,EAAK1B,MAAM,EAAG,IAAI2B,QAAQ,IAAK,M,4CCI7BC,GAAStB,EAAAA,EAAAA,IAAH,+HAQNuB,IAAWvB,EAAAA,EAAAA,GAAOwB,GAAAA,IAAPxB,CAAH,0CAIRyB,GAAOzB,EAAAA,EAAAA,IAAH,gDAIJ0B,GAAW1B,EAAAA,EAAAA,IAAH,8IASR2B,GAAQ3B,EAAAA,EAAAA,IAAH,kEAKL4B,GAAQ5B,EAAAA,EAAAA,KAAH,4DAIL6B,IAAY7B,EAAAA,EAAAA,GAAO8B,EAAAA,IAAP9B,CAAH,mFAKT+B,IAAY/B,EAAAA,EAAAA,GAAOgC,GAAAA,IAAPhC,CAAH,mFAKTiC,IAAYjC,EAAAA,EAAAA,GAAOkC,GAAAA,IAAPlC,CAAH,mFAKTmC,GAASnC,EAAAA,EAAAA,IAAH,qGCanB,GAlDqD,SAAC,GAAY,IAAVM,EAAS,EAATA,GACtD,GAA6B8B,EAAAA,EAAAA,IAAuB,CAAEC,UAAW/B,IAAzDgC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRC,EAAO,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMA,KAEtB,OACE,gCACGC,IAAc,SAACE,GAAA,EAAD,IACdD,IACC,4BACE,UAAClB,GAAD,YACE,iCACM,0BAAOkB,EAAQE,SAEpBF,EAAQG,WAAY,SAACpB,GAAD,QAGvB,UAACE,GAAD,YACE,UAACC,GAAD,YACE,UAACC,GAAD,YACE,SAACE,GAAD,KACA,qCAEF,SAACD,GAAD,UAAQY,EAAQ/C,WAElB,UAACiC,GAAD,YACE,UAACC,GAAD,YACE,SAACI,GAAD,KACA,sCAEF,SAACH,GAAD,UAAQY,EAAQI,YAElB,UAAClB,GAAD,YACE,UAACC,GAAD,YACE,SAACM,GAAD,KACA,sCAEF,SAACL,GAAD,UAAQY,EAAQK,MAAQL,EAAQK,MAAQ,eAI5C,UAACV,GAAD,YACE,qCAAaW,EAAeN,EAAQO,eACpC,qCAAaD,EAAeN,EAAQQ,wBCvDnCC,GAAUjD,EAAAA,EAAAA,IAAH,oQAcPkD,GAAQlD,EAAAA,EAAAA,IAAH,oMAYLmD,GAAcnD,EAAAA,EAAAA,IAAH,qGAMXoD,GAAWpD,EAAAA,EAAAA,EAAH,6RASC,gBAAGqD,EAAH,EAAGA,WAAH,OAClBA,GAA0B,4BAQjBpD,GAAOD,EAAAA,EAAAA,EAAH,8EAKJsD,GAActD,EAAAA,EAAAA,IAAH,6MAYXuD,GAASvD,EAAAA,EAAAA,EAAH,mPAcNwD,IAAaxD,EAAAA,EAAAA,GAAOgC,GAAAA,IAAPhC,CAAH,+EAKVyD,GAAQzD,EAAAA,EAAAA,EAAH,8FAMLiC,IAAYjC,EAAAA,EAAAA,GAAOkC,GAAAA,IAAPlC,CAAH,+EAKT0D,GAAa1D,EAAAA,EAAAA,GAAH,oGAMV2D,GAAa3D,EAAAA,EAAAA,GAAH,6FAQV4D,GAAS5D,EAAAA,EAAAA,OAAH,2XAsBNuB,IAAWvB,EAAAA,EAAAA,GAAOwB,GAAAA,IAAPxB,CAAH,sCACX,gBAAG6D,EAAH,EAAGA,KAAH,OAAeA,GAAc,MCxBvC,GAnFgB,SAAC,GAAyD,IAAvDvD,EAAsD,EAAtDA,GAAIb,EAAkD,EAAlDA,KAAMmD,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOF,EAA8B,EAA9BA,SACzC,GAKImB,EAAAA,EAAAA,IAAa,GAJfC,EADF,EACEA,qBACAC,EAFF,EAEEA,uBACAC,EAHF,EAGEA,uBACAC,EAJF,EAIEA,yBAEI1D,GAAWC,EAAAA,EAAAA,MACjB,GAAyB0D,EAAAA,EAAAA,MAAlBC,GAAP,eAYA,OACE,gCACGH,IACC,SAACI,EAAA,EAAD,CAAOC,QAASJ,EAA0BK,MAAO9E,EAAjD,UACE,SAAC,EAAD,CACEa,GAAIA,EACJb,KAAMA,EACNc,YAAa2D,MAKlBH,IACC,SAACM,EAAA,EAAD,CAAOC,QAASN,EAAwBO,MAAO9E,EAA/C,UACE,SAAC,GAAD,CAAoBa,GAAIA,OAI5B,UAAC2C,GAAD,YACE,UAACC,GAAD,CAAO/B,QAAS6C,EAAhB,WACE,UAACb,GAAD,YACE,SAACC,GAAD,CAAUC,WAAYmB,IAAtB,SACGC,EAAehF,MAElB,SAAC,GAAD,UAAOA,QAGT,UAAC6D,GAAD,YACE,UAAC,GAAD,YACE,SAACE,GAAD,IACCZ,KAEQ,KAAVC,IACC,UAACY,GAAD,YACE,SAAC,GAAD,IACCZ,YAMT,UAACa,GAAD,YACE,SAACC,GAAD,WACE,SAACC,GAAD,CAAQ1C,KAAK,SAASC,QAAS+C,EAA/B,UACE,SAAC,MAAD,SAGJ,SAACP,GAAD,WACE,SAACC,GAAD,CAAQ1C,KAAK,SAASC,QAAS,kBAAMX,EAAS,QAAD,OAASF,KAAtD,UACE,SAAC,MAAD,SAGJ,SAACqD,GAAD,WACE,SAACC,GAAD,CAAQ1C,KAAK,SAASC,QA/DT,WACrBiD,EAAe,CAAE/B,UAAW/B,EAAIqC,UAAWA,IAE1CA,EAEG3B,EAAAA,OAAAA,QAAA,eACUvB,EADV,mDADAuB,EAAAA,OAAAA,QAAA,eAAuBvB,EAAvB,gDA2DI,SACGkD,GAAW,SAAC,GAAD,CAAUkB,KAAK,aAAe,SAAC,GAAD,mB,gFCxG3CZ,EAAUjD,EAAAA,EAAAA,IAAH,+CAIPD,EAAOC,EAAAA,EAAAA,EAAH,iE,SCIjB,EARgD,SAAC,GAAiB,IAAf0E,EAAc,EAAdA,QACjD,OACE,SAACzB,EAAD,WACE,SAAClD,EAAD,UAAO2E,Q,+ICHAxE,EAAOF,EAAAA,EAAAA,GAAH,wCAIJG,EAAOH,EAAAA,EAAAA,GAAH,gD,SCoCjB,EAjCmC,WACjC,OAAsC2E,EAAAA,EAAAA,MAA9BrC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAAYqC,EAA1B,EAA0BA,QACpBjC,EAAQ,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAMuC,aAMvB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,MACC,CAACA,KAGF,gCACGrC,IAAc,SAACE,EAAA,EAAD,KACf,SAACvC,EAAD,UACGyC,GACCA,EAASoC,KACP,YAA0D,IAAvDrC,EAAsD,EAAtDA,IAAKjD,EAAiD,EAAjDA,KAAMmD,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,MAAOF,EAA6B,EAA7BA,SAC1B,OACE,SAACxC,EAAD,WACE,SAAC6E,EAAA,EAAD,CACE1E,GAAIoC,EACJjD,KAAMA,EACNmD,MAAOA,EACPC,MAAOA,EACPF,SAAUA,KANHD,Y,UCJ3B,EAfoC,WAClC,IAAQJ,GAASqC,EAAAA,EAAAA,MAATrC,KACFK,EAAQ,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAMuC,aAEvB,OACE,SAACI,EAAA,EAAD,UACGtC,GAAYA,EAASuC,OAAS,GAC7B,SAAC,EAAD,KAEA,SAACC,EAAA,EAAD,CAAST,QAAQ","sources":["utilities/getFirstLetter.ts","utilities/getRandomHexColor.ts","components/DeletingContact/DeletingContact.styled.ts","hooks/useDeletingContact.ts","components/DeletingContact/DeletingContact.tsx","utilities/dateFormatting.ts","components/ContactInformation/ContactInformation.styled.ts","components/ContactInformation/ContactInformation.tsx","components/Contact/Contact.styled.ts","components/Contact/Contact.tsx","components/Message/Message.styled.ts","components/Message/Message.tsx","components/FavoriteList/FavoriteList.styled.ts","components/FavoriteList/FavoriteList.tsx","pages/FavoritesPage.tsx"],"sourcesContent":["const getFirstLetter = (name: string) => name.slice(0, 1);\n\nexport default getFirstLetter;\n","const getRandomHexColor = () => {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\nexport default getRandomHexColor;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: red;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: red;\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst useDeletingContact = (\n  id?: string,\n  name?: string,\n  toggleModal?: () => void,\n) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    if (id !== undefined && toggleModal !== undefined) {\n      deleteContact(id);\n      navigate('/contacts');\n      toggleModal();\n      Notify.success(`The ${name} has been removed from your contact list.`);\n    }\n  };\n\n  return { isDeleting, deleteSelectedContact };\n};\n\nexport default useDeletingContact;\n","import {\n  Text,\n  Name,\n  List,\n  Item,\n  ButtonCancel,\n  ButtonDelete,\n} from './DeletingContact.styled';\nimport useDeletingContact from 'hooks/useDeletingContact';\nimport IDeletingContact from 'types/IDeletingContact';\n\nconst DeletingContact = ({ id, name, toggleModal }: IDeletingContact) => {\n  const { isDeleting, deleteSelectedContact } = useDeletingContact(\n    id,\n    name,\n    toggleModal,\n  );\n\n  return (\n    <>\n      <Text>\n        Are you sure you want to delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={toggleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonDelete type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? '...' : 'Delete'}\n          </ButtonDelete>\n        </Item>\n      </List>\n    </>\n  );\n};\n\nexport default DeletingContact;\n","const dateFormatting = (date: string) => {\n  if (date) {\n    return date.slice(0, 19).replace('T', ' ');\n  }\n};\n\nexport default dateFormatting;\n","import styled from '@emotion/styled';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { MdEmail } from 'react-icons/md';\nimport { IoIosStar } from 'react-icons/io';\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n`;\n\nexport const StarIcon = styled(IoIosStar)`\n  fill: #e6be0e;\n`;\n\nexport const Body = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Property = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 100%;\n  margin-bottom: 8px;\n`;\n\nexport const Group = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Value = styled.span`\n  color: var(--accent-text-color);\n`;\n\nexport const UseerIcon = styled(FaUserAlt)`\n  margin-right: 10px;\n  color: var(--accent-text-color);\n`;\n\nexport const PhoneIcon = styled(BsFillTelephoneFill)`\n  margin-right: 10px;\n  color: var(--accent-text-color);\n`;\n\nexport const EmailIcon = styled(MdEmail)`\n  margin-right: 10px;\n  color: var(--accent-text-color);\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { useGetContactByIdQuery } from 'redux/contacts/contact-api';\nimport dateFormatting from 'utilities/dateFormatting';\n\nimport Loader from 'components/Loader';\n\nimport {\n  Header,\n  StarIcon,\n  Body,\n  Property,\n  Group,\n  Value,\n  UseerIcon,\n  PhoneIcon,\n  EmailIcon,\n  Footer,\n} from './ContactInformation.styled';\n\nconst ContactInformation: React.FC<{ id: string }> = ({ id }) => {\n  const { data, isFetching } = useGetContactByIdQuery({ contactId: id });\n  const contact = data?.data;\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {contact && (\n        <div>\n          <Header>\n            <p>\n              ID: <span>{contact._id}</span>\n            </p>\n            {contact.favorite && <StarIcon />}\n          </Header>\n\n          <Body>\n            <Property>\n              <Group>\n                <UseerIcon />\n                <p>Name:</p>\n              </Group>\n              <Value>{contact.name}</Value>\n            </Property>\n            <Property>\n              <Group>\n                <PhoneIcon />\n                <p>Phone:</p>\n              </Group>\n              <Value>{contact.phone}</Value>\n            </Property>\n            <Property>\n              <Group>\n                <EmailIcon />\n                <p>Email:</p>\n              </Group>\n              <Value>{contact.email ? contact.email : '---'}</Value>\n            </Property>\n          </Body>\n\n          <Footer>\n            <p>Created: {dateFormatting(contact.createdAt)}</p>\n            <p>Updated: {dateFormatting(contact.updatedAt)}</p>\n          </Footer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactInformation;\n","import styled from '@emotion/styled';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { MdEmail } from 'react-icons/md';\nimport { IoIosStar } from 'react-icons/io';\n\nexport const Wrapper = styled.div`\n  background-color: #fafafa;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n\n  padding: 10px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const Guard = styled.div`\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    width: 100%;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IconUser = styled.p<{ background?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 24px;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  background-color: ${({ background }) =>\n    background ? background : 'var(--accent-bg-color)'};\n  color: var(--main-bg-color);\n\n  width: 40px;\n  height: 40px;\n  margin-right: 30px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--main-text-color);\n`;\n\nexport const DataWrapper = styled.div`\n  margin-bottom: 15px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    margin-bottom: 0;\n  }\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 10px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-right: 50px;\n  }\n`;\n\nexport const NumberIcon = styled(BsFillTelephoneFill)`\n  fill: var(--accent-bg-color);\n  margin-right: 5px;\n`;\n\nexport const Email = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const EmailIcon = styled(MdEmail)`\n  fill: var(--accent-bg-color);\n  margin-right: 5px;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n\n  cursor: pointer;\n  transition: color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n\nexport const StarIcon = styled(IoIosStar)<{ fill?: string }>`\n  fill: ${({ fill }) => (fill ? fill : '')};\n`;\n","import { useNavigate } from 'react-router-dom';\nimport useShowModal from 'hooks/useShowModal';\nimport { useChangeFavoriteMutation } from 'redux/contacts/contact-api';\n\nimport getFirstLetter from 'utilities/getFirstLetter';\nimport getRandomHexColor from 'utilities/getRandomHexColor';\nimport { IContactState } from 'types/IContact';\n\nimport { FaTrash, FaUserEdit } from 'react-icons/fa';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport Modal from 'components/Modal';\nimport DeletingContact from 'components/DeletingContact';\nimport ContactInformation from 'components/ContactInformation';\n\nimport {\n  Wrapper,\n  Guard,\n  NameWrapper,\n  IconUser,\n  Name,\n  DataWrapper,\n  Number,\n  NumberIcon,\n  Email,\n  EmailIcon,\n  ButtonList,\n  ButtonItem,\n  Button,\n  StarIcon,\n} from './Contact.styled';\n\nconst Contact = ({ id, name, phone, email, favorite }: IContactState) => {\n  const {\n    showContactInfoModal,\n    toggleContactInfoModal,\n    showDeleteContactModal,\n    toggleDeleteContactModal,\n  } = useShowModal(false);\n  const navigate = useNavigate();\n  const [changeFavorite] = useChangeFavoriteMutation();\n\n  const toggleFavorite = () => {\n    changeFavorite({ contactId: id, favorite: !favorite });\n\n    !favorite\n      ? Notify.success(`User ${name} been successfully added to favorite list.`)\n      : Notify.success(\n          `User ${name} been successfully deleted from favorite list.`,\n        );\n  };\n\n  return (\n    <>\n      {showDeleteContactModal && (\n        <Modal onClose={toggleDeleteContactModal} title={name}>\n          <DeletingContact\n            id={id}\n            name={name}\n            toggleModal={toggleDeleteContactModal}\n          />\n        </Modal>\n      )}\n\n      {showContactInfoModal && (\n        <Modal onClose={toggleContactInfoModal} title={name}>\n          <ContactInformation id={id} />\n        </Modal>\n      )}\n\n      <Wrapper>\n        <Guard onClick={toggleContactInfoModal}>\n          <NameWrapper>\n            <IconUser background={getRandomHexColor()}>\n              {getFirstLetter(name)}\n            </IconUser>\n            <Name>{name}</Name>\n          </NameWrapper>\n\n          <DataWrapper>\n            <Number>\n              <NumberIcon />\n              {phone}\n            </Number>\n            {email !== '' && (\n              <Email>\n                <EmailIcon />\n                {email}\n              </Email>\n            )}\n          </DataWrapper>\n        </Guard>\n\n        <ButtonList>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleDeleteContactModal}>\n              <FaTrash />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n              <FaUserEdit />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleFavorite}>\n              {favorite ? <StarIcon fill=\"#e6be0e\" /> : <StarIcon />}\n            </Button>\n          </ButtonItem>\n        </ButtonList>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import { Wrapper, Text } from './Message.styled';\n\nconst Message: React.FC<{ message?: string }> = ({ message }) => {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useEffect } from 'react';\nimport { useGetFavoritesContactsQuery } from 'redux/contacts/contact-api';\n\nimport Contact from 'components/Contact';\nimport Loader from 'components/Loader';\n\nimport { IContactList } from 'types/IContactList';\nimport { List, Item } from './FavoriteList.styled';\n\nconst FavoriteList: React.FC<{}> = () => {\n  const { data, isFetching, refetch } = useGetFavoritesContactsQuery();\n  const favorite = data?.favoriteData;\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      <List>\n        {favorite &&\n          favorite.map(\n            ({ _id, name, phone, email, favorite }: IContactList) => {\n              return (\n                <Item key={_id}>\n                  <Contact\n                    id={_id}\n                    name={name}\n                    phone={phone}\n                    email={email}\n                    favorite={favorite}\n                  />\n                </Item>\n              );\n            },\n          )}\n      </List>\n    </>\n  );\n};\n\nexport default FavoriteList;\n","import { useGetFavoritesContactsQuery } from 'redux/contacts/contact-api';\n\nimport Container from 'components/Container';\nimport FavoriteList from 'components/FavoriteList';\nimport Message from 'components/Message';\n\nconst FavoritesPage: React.FC<{}> = () => {\n  const { data } = useGetFavoritesContactsQuery();\n  const favorite = data?.favoriteData;\n\n  return (\n    <Container>\n      {favorite && favorite.length > 0 ? (\n        <FavoriteList />\n      ) : (\n        <Message message=\"You not added contacts for favorites for now... :(\" />\n      )}\n    </Container>\n  );\n};\n\nexport default FavoritesPage;\n"],"names":["name","slice","Math","floor","random","toString","Text","styled","Name","List","Item","ButtonCancel","ButtonDelete","id","toggleModal","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isLoading","deleteSelectedContact","undefined","Notify","useDeletingContact","type","onClick","date","replace","Header","StarIcon","IoIosStar","Body","Property","Group","Value","UseerIcon","FaUserAlt","PhoneIcon","BsFillTelephoneFill","EmailIcon","MdEmail","Footer","useGetContactByIdQuery","contactId","data","isFetching","contact","Loader","_id","favorite","phone","email","dateFormatting","createdAt","updatedAt","Wrapper","Guard","NameWrapper","IconUser","background","DataWrapper","Number","NumberIcon","Email","ButtonList","ButtonItem","Button","fill","useShowModal","showContactInfoModal","toggleContactInfoModal","showDeleteContactModal","toggleDeleteContactModal","useChangeFavoriteMutation","changeFavorite","Modal","onClose","title","getRandomHexColor","getFirstLetter","message","useGetFavoritesContactsQuery","refetch","favoriteData","useEffect","map","Contact","Container","length","Message"],"sourceRoot":""}