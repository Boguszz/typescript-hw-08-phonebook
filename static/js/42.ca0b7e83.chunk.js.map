{"version":3,"file":"static/js/42.ca0b7e83.chunk.js","mappings":"2NAGaA,EAAYC,EAAAA,EAAAA,GAAH,mGAMTC,EAAQD,EAAAA,EAAAA,MAAH,6FAMLE,EAAQF,EAAAA,EAAAA,KAAH,sGAMLG,GAAcH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,+UAoBXK,EAASL,EAAAA,EAAAA,OAAH,me,UCvCNK,EAASL,EAAAA,EAAAA,OAAH,sbAsBNC,EAAQD,EAAAA,EAAAA,KAAH,8C,mBCPlB,EAZe,SAAC,GAA6B,IAA3BM,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAChBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAAC,EAAD,CAAQC,KAAK,SAASC,QAHP,kBAAMH,EAASD,IAG9B,WACE,SAAC,MAAD,KACA,SAAC,EAAD,UAAQD,QC+Cd,EAhDoB,SAAC,GAMA,IALnBM,EAKkB,EALlBA,MACAC,EAIkB,EAJlBA,cACAC,EAGkB,EAHlBA,aACAC,EAEkB,EAFlBA,iBACAC,EACkB,EADlBA,YAEA,OACE,iCACE,SAACjB,EAAD,UAAYa,KACZ,SAAC,EAAD,CAAQN,KAAK,eAAeC,KAAK,eACjC,SAAC,KAAD,CACEM,cAAeA,EACfI,SAAUH,EACVC,iBAAkBA,EAHpB,SAKG,gBAAGG,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMJ,SAAUG,EAAhB,WACE,UAACnB,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,CACEO,KAAK,OACLY,KAAK,OACLC,SAAUJ,EACVK,MAAON,EAAOI,QAEhB,SAAC,KAAD,CAAcA,KAAK,OAAOG,UAAU,YAEtC,UAACxB,EAAD,YACE,SAACC,EAAD,sBACA,SAACC,EAAD,CACEO,KAAK,MACLY,KAAK,SACLC,SAAUJ,EACVK,MAAON,EAAOQ,UAEhB,SAAC,KAAD,CAAcJ,KAAK,SAASG,UAAU,YAExC,SAACpB,EAAD,CAAQK,KAAK,SAASiB,SAAUN,EAAhC,SACGA,EAAe,MAAQL,e,2IClBtC,EAvB4B,WAC1B,IAAMR,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBmB,EAAAA,EAAAA,MAAjBC,GAAP,eACcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAgBR,OAdqB,SAACA,GACZ,OAARF,QAAQ,IAARA,GAAAA,EAAUG,MAAK,SAAAC,GAAO,OAAIA,EAAQZ,OAASU,EAAKV,QAC5Ca,EAAAA,OAAAA,QAAA,UACKH,EAAKV,MACR,4CACA,MAEFO,EAAcG,GAElBxB,EAAS,aAET4B,EAAAA,OAAAA,QAAA,cAAsBJ,EAAKV,KAA3B,4C,mBCHJ,EAjBiC,WAC/B,IACMe,EAAmBC,IAEzB,OACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACE5B,MAAM,kBACNC,cAPiC,CAAES,KAAM,GAAII,OAAQ,IAQrDZ,aAAcuB,EACdtB,iBAAkB0B,EAAAA,GAClBzB,YAAY,oB,mHCfPyB,EAAgBC,EAAAA,GAAW,CACtCpB,KAAMoB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCnB,OAAQgB,EAAAA,KAAaC,aAGVG,EAAkBJ,EAAAA,GAAW,CACxCK,MAAOL,EAAAA,KAAaC,WAAWI,QAC/BC,SAAUN,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,MAGlCI,EAAqBP,EAAAA,GAAW,CAC3CpB,KAAMoB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCE,MAAOL,EAAAA,KAAaC,WAAWI,QAC/BC,SAAUN,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI","sources":["components/ContactForm/ContactForm.styled.ts","components/GoBack/GoBack.styled.ts","components/GoBack/GoBack.tsx","components/ContactForm/ContactForm.tsx","hooks/useCreateNewContact.ts","pages/AddContactPage.tsx","utilities/validationSchema.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const TitlePage = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  font-weight: 900;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 40px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 30px;\n  padding: 10px 25px 10px 25px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Button, Label } from './GoBack.styled';\nimport { useNavigate } from 'react-router-dom';\nimport IGoBack from 'types/IGoBack';\n\nconst GoBack = ({ text, path }: IGoBack) => {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n};\n\nexport default GoBack;\n","import {\n  TitlePage,\n  Label,\n  Title,\n  StyledField,\n  Button,\n} from './ContactForm.styled';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport GoBack from 'components/GoBack';\nimport IContactForm from 'types/IContactForm';\n\nconst ContactForm = ({\n  title,\n  initialValues,\n  onSubmitForm,\n  validationSchema,\n  buttonLabel,\n}: IContactForm) => {\n  return (\n    <>\n      <TitlePage>{title}</TitlePage>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Title>Name</Title>\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Number</Title>\n              <StyledField\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                value={values.number}\n              />\n              <ErrorMessage name=\"number\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? '...' : buttonLabel}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useNavigate } from 'react-router-dom';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contact-api';\nimport { Report } from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport IContact from 'types/IContact';\n\nconst useCreateNewContact = () => {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const onSubmitForm = (data: IContact) => {\n    contacts?.some(contact => contact.name === data.name)\n      ? Report.warning(\n          `${data.name}`,\n          'This user is already in the contact list.',\n          'OK',\n        )\n      : createContact(data);\n\n    navigate('/contacts');\n\n    Notify.success(`The ${data.name} has been added to your contact list.`);\n  };\n\n  return onSubmitForm;\n};\n\nexport default useCreateNewContact;\n","import Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\nimport useCreateNewContact from 'hooks/useCreateNewContact';\nimport { contactSchema } from 'utilities/validationSchema';\nimport IContact from 'types/IContact';\n\nconst AddContactPage: React.FC = () => {\n  const initialValues: IContact | null = { name: '', number: '' };\n  const createNewContact = useCreateNewContact();\n\n  return (\n    <Container>\n      <ContactForm\n        title=\"Add new contact\"\n        initialValues={initialValues}\n        onSubmitForm={createNewContact}\n        validationSchema={contactSchema}\n        buttonLabel=\"Add contact\"\n      />\n    </Container>\n  );\n};\n\nexport default AddContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["TitlePage","styled","Label","Title","StyledField","Field","Button","text","path","navigate","useNavigate","type","onClick","title","initialValues","onSubmitForm","validationSchema","buttonLabel","onSubmit","values","handleChange","handleSubmit","isSubmitting","name","onChange","value","component","number","disabled","useCreateContactMutation","createContact","contacts","useGetContactsQuery","data","some","contact","Report","Notify","createNewContact","useCreateNewContact","Container","ContactForm","contactSchema","yup","required","min","max","userLoginSchema","email","password","userRegisterSchema"],"sourceRoot":""}